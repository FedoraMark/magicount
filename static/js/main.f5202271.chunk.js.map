{"version":3,"sources":["magiCount.module.scss","serviceWorker.js","magiCount.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","defaultScores","noSleep","NoSleep","magiCount","state","default","props","score","atDefault","defaultIndex","indexOf","swipeDirection","isResetting","willTransition","orientation","plusActive","minusActive","maxTouches","showOptions","useDarkMode","dark","preventSleep","useMultitouch","handleWindowSize","getWindowSize","addEventListener","setState","innerHeight","innerWidth","vh","document","documentElement","style","setProperty","handleOrientationChange","e","currentTarget","handleNoSleep","enable","removeEventListener","handleShowModal","show","changeBy","amt","scoreSwipe","dir","newIndex","length","setTimeout","DURATION","onTouchStart","btn","event","preventDefault","targetTouches","plusTouch","minusTouch","onTouchEnd","render_optionsModal","Modal","onHide","bind","className","classnames","optModal","darkModal","Header","closeButton","Title","Body","optModalBody","modalList","onClick","checked","onstyle","offstyle","label","opacity","disabled","this","disable","orientStyle","exitAnim","enterAnim","landscape","portrait","getElementById","dangerAt","warnAt","mc_wrapper","normal","warning","danger","blurred","button","buttonActive","icon","area","scoreArea","onSwipedLeft","onSwipedRight","onSwipedDown","trackMouse","trackTouch","preventDefaultTouchmoveEvent","animationIn","animationOut","isVisible","duration","easing","digit","animateOnMount","Component","defaultProps","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f5202271.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"optModal\":\"magiCount_optModal__3BTXK\",\"optModalBody\":\"magiCount_optModalBody__36uJI\",\"modalList\":\"magiCount_modalList__2RUOo\",\"label\":\"magiCount_label__252_L\",\"darkModal\":\"magiCount_darkModal__3ouTS\",\"mc_wrapper\":\"magiCount_mc_wrapper__3_Xdj\",\"blurred\":\"magiCount_blurred__Nkz9N\",\"portrait\":\"magiCount_portrait__2dwHL\",\"score\":\"magiCount_score__t_Ww7\",\"icon\":\"magiCount_icon__qVCfU\",\"landscape\":\"magiCount_landscape__3G8M3\",\"button\":\"magiCount_button__44Hr4\",\"area\":\"magiCount_area__VZeCB\",\"buttonActive\":\"magiCount_buttonActive__1IeeU\",\"scoreArea\":\"magiCount_scoreArea__20yf9\",\"digit\":\"magiCount_digit__2Cw7B\",\"default\":\"magiCount_default__1dXkB\",\"normal\":\"magiCount_normal__3qMrN\",\"warning\":\"magiCount_warning__26DgI\",\"danger\":\"magiCount_danger__2Jsk7\",\"dark\":\"magiCount_dark__3paZx\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react\";\nimport classnames from \"classnames\";\nimport NoSleep from \"nosleep.js\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Animated from \"react-css-animated\";\nimport { Swipeable } from \"react-swipeable\";\n\nimport { AiFillPlusCircle, AiFillMinusCircle } from \"react-icons/ai\";\n\nimport \"animate.css\";\nimport style from \"./magiCount.module.scss\";\n\nconst defaultScores = [0, 10, 20, 30, 40, 50];\n\nconst LEFT = \"left\";\nconst RIGHT = \"right\";\n\nconst PLUS = \"plus\";\nconst MINUS = \"minus\";\n\nconst DURATION = 400;\n\nconst noSleep = new NoSleep();\n\nclass magiCount extends Component {\n  static propTypes = {\n    default: PropTypes.number.isRequired,\n    warnAt: PropTypes.number,\n    dangerAt: PropTypes.number,\n    dark: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    warnAt: 5,\n    dangerAt: 0,\n    dark: false,\n  };\n\n  state = {\n    default: this.props.default,\n    score: this.props.default,\n    atDefault: true,\n    defaultIndex: defaultScores.indexOf(this.props.default),\n    swipeDirection: \"\",\n    isResetting: true,\n    willTransition: false,\n    orientation: 0,\n\n    plusActive: false,\n    minusActive: false,\n    maxTouches: 0,\n\n    showOptions: false,\n\n    useDarkMode: this.props.dark,\n    preventSleep: true,\n    useMultitouch: true,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isResetting: false,\n      orientation: window.innerHeight >= window.innerWidth ? 0 : 90,\n    });\n\n    this.handleOrientationChange();\n    this.handleWindowSize();\n\n    document.addEventListener(\"touchstart\", this.handleNoSleep, false);\n  }\n\n  componentWillUnmount() {\n    noSleep.disable();\n  }\n\n  // HANDLERS\n  handleWindowSize = () => {\n    // WINDOW HEIGHT FIX\n    this.getWindowSize();\n\n    window.addEventListener(\"resize\", () => {\n      this.getWindowSize();\n\n      this.setState({ orientation: window.innerHeight >= window.innerWidth ? 0 : 90 });\n    });\n  };\n\n  getWindowSize = () => {\n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n  };\n\n  handleOrientationChange = () => {\n    if (\"onorientationchange\" in window) {\n      window.addEventListener(\"orientationchange\", (e) => {\n        this.setState({ orientation: e.currentTarget.orientation });\n        this.getWindowSize();\n      });\n    }\n  };\n\n  handleNoSleep = () => {\n    noSleep.enable();\n    document.removeEventListener(\"touchstart\", this.handleNoSleep, false);\n  };\n\n  handleShowModal = (show) => {\n    this.setState({ showOptions: show });\n  };\n\n  // FUNCITONS\n  changeBy = (amt) => {\n    // use NEGATIVES to decrement\n    this.setState({\n      atDefault: false,\n      score: this.state.score + amt,\n    });\n  };\n\n  scoreSwipe = (dir) => {\n    if (this.state.isResetting || this.state.willTransition) {\n      return;\n    }\n\n    if (!this.state.atDefault) {\n      this.setState(\n        {\n          isResetting: true,\n          willTransition: true,\n          atDefault: true,\n        },\n        () => {\n          setTimeout(() => {\n            this.setState(\n              {\n                willTransition: false,\n                score: this.state.default,\n              },\n              () => {\n                setTimeout(() => {\n                  this.setState({ isResetting: false });\n                }, DURATION / 2);\n              }\n            );\n          }, DURATION / 2);\n        }\n      );\n    } else {\n      let newIndex = 0;\n      if (dir === LEFT) {\n        newIndex = this.state.defaultIndex + 1;\n      } else if (dir === RIGHT) {\n        newIndex = this.state.defaultIndex - 1;\n      }\n\n      if (newIndex < 0) {\n        newIndex = defaultScores.length - 1;\n      } else if (newIndex >= defaultScores.length) {\n        newIndex = 0;\n      }\n\n      this.setState(\n        {\n          swipeDirection: dir,\n          willTransition: true,\n        },\n        () => {\n          setTimeout(() => {\n            this.setState({\n              willTransition: false,\n              defaultIndex: newIndex,\n              score: defaultScores[newIndex],\n              default: defaultScores[newIndex],\n            });\n          }, DURATION / 2);\n        }\n      );\n    }\n  };\n\n  onTouchStart = (btn, event) => {\n    event.preventDefault();\n\n    if (event.targetTouches.length > this.state.maxTouches) {\n      this.setState({ maxTouches: event.targetTouches.length });\n    }\n\n    if (this.state.plusTouch || this.state.minusTouch) {\n      return;\n    }\n\n    if (btn === PLUS) {\n      this.setState({ plusTouch: true });\n    } else if (btn === MINUS) {\n      this.setState({ minusTouch: true });\n    }\n  };\n\n  onTouchEnd = (btn, event) => {\n    if (!this.state.useMultitouch) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (event.targetTouches.length > 0) {\n      return;\n    }\n\n    if (btn === PLUS) {\n      this.changeBy(this.state.maxTouches);\n      this.setState({ plusTouch: false, maxTouches: 0 });\n    } else if (btn === MINUS) {\n      this.changeBy(-1 * this.state.maxTouches);\n      this.setState({ minusTouch: false, maxTouches: 0 });\n    }\n  };\n\n  // RENDERERS\n  render_optionsModal = () => {\n    return (\n      <Modal\n        show={this.state.showOptions}\n        onHide={this.handleShowModal.bind(this, false)}\n        // backdrop=\"static\"\n        className={classnames(\n          style.optModal,\n          this.state.useDarkMode ? style.darkModal : \"\"\n        )}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Options</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body className={style.optModalBody}>\n          <ul className={style.modalList}>\n            <li\n              onClick={() => {\n                this.setState({ useDarkMode: !this.state.useDarkMode });\n              }}\n            >\n              <BootstrapSwitchButton\n                checked={this.state.useDarkMode}\n                onstyle={\"dark\"}\n                offstyle=\"light\"\n              />\n              <label className={style.label}>Dark Mode</label>\n            </li>\n\n            <li\n              onClick={() => {\n                this.setState({ useMultitouch: !this.state.useMultitouch });\n              }}\n            >\n              <BootstrapSwitchButton\n                checked={this.state.useMultitouch}\n                onstyle={\"dark\"}\n                offstyle=\"light\"\n              />\n              <label className={style.label}>Use Multitouch</label>\n            </li>\n\n            <li\n              style={{opacity: \".5\"}}\n              // onClick={() => {\n              //   if (this.state.preventSleep) {} else {}\n              //   this.setState({ preventSleep: !this.state.preventSleep });\n              // }}\n            >\n              <BootstrapSwitchButton\n                checked={this.state.preventSleep}\n                disabled={true}\n                onstyle={\"dark\"}\n                offstyle=\"light\"\n              />\n              <label className={style.label}>Prevent Sleep</label>\n            </li>\n          </ul>\n        </Modal.Body>\n      </Modal>\n    );\n  };\n\n  render() {\n    let exitAnim =\n      this.state.swipeDirection === LEFT ? \"fadeOutLeftBig\" : \"fadeOutRightBig\";\n    let enterAnim =\n      this.state.swipeDirection === LEFT ? \"bounceInRight\" : \"bounceInLeft\";\n\n    if (this.state.isResetting) {\n      exitAnim = \"flipOutY\";\n      enterAnim = \"flipInY\";\n    }\n\n    var orientStyle;\n    switch (this.state.orientation) {\n      case 90:\n      case -90:\n        orientStyle = style.landscape;\n        break;\n      case 0:\n        orientStyle = style.portrait;\n        break;\n      default:\n        orientStyle =\n          window.innerHeight >= window.innerWidth\n            ? style.portrait\n            : style.landscape;\n        break;\n    }\n\n    // set body background\n    if (this.state.useDarkMode) {\n      document.getElementById(\"body\").className = \"dark\";\n    } else if (this.state.atDefault) {\n      document.getElementById(\"body\").className = \"default\";\n    } else {\n      if (this.state.default > 0) {\n        if (this.state.score <= this.props.dangerAt) {\n          document.getElementById(\"body\").className = \"danger\";\n        } else if (this.state.score <= this.props.warnAt) {\n          document.getElementById(\"body\").className = \"warning\";\n        } else {\n          document.getElementById(\"body\").className = \"normal\";\n        }\n      } else {\n        if (this.state.score >= 0) {\n          document.getElementById(\"body\").className = \"normal\";\n        } else {\n          document.getElementById(\"body\").className = \"danger\";\n        }\n      }\n    }\n\n    return (\n      <div\n        className={classnames(\n          style.mc_wrapper,\n          orientStyle,\n          this.state.atDefault ? style.default : style.normal,\n          this.state.score <= this.props.warnAt && this.state.default > 0\n            ? style.warning\n            : \"\",\n          this.state.score <= this.props.dangerAt && this.state.default > 0\n            ? style.danger\n            : \"\",\n          this.state.score < 0 ? style.danger : \"\",\n          this.state.showOptions ? style.blurred : \"\",\n          this.state.useDarkMode ? style.dark : \"\"\n        )}\n      >\n        {/* PLUS BUTTON */}\n        <div\n          className={classnames(\n            style.button,\n            this.state.plusActive ? style.buttonActive : \"\"\n          )}\n          onClick={this.changeBy.bind(this, 1)}\n          onTouchStart={this.onTouchStart.bind(this, PLUS)}\n          onTouchEnd={this.onTouchEnd.bind(this, PLUS)}\n        >\n          <div className={style.icon}>\n            <AiFillPlusCircle />\n          </div>\n        </div>\n\n        {/* SCORE AREA */}\n        <Swipeable\n          className={classnames(style.area, style.scoreArea)}\n          onSwipedLeft={this.scoreSwipe.bind(this, LEFT)}\n          onSwipedRight={this.scoreSwipe.bind(this, RIGHT)}\n          onSwipedDown={this.handleShowModal.bind(this, true)}\n          trackMouse\n          trackTouch\n          preventDefaultTouchmoveEvent\n        >\n          <Animated\n            className={classnames(style.score)}\n            animationIn={enterAnim}\n            animationOut={exitAnim}\n            isVisible={!this.state.willTransition}\n            duration={this.state.isResetting ? DURATION / 2 : DURATION}\n            easing={this.state.willTransition ? \"ease-in\" : \"ease\"}\n          >\n            <Animated\n              className={style.digit}\n              animateOnMount\n              animationIn=\"fadeIn\"\n            >\n              {this.state.score}\n            </Animated>\n          </Animated>\n        </Swipeable>\n\n        {/* MINUS BUTTON */}\n        <div\n          className={classnames(\n            style.button,\n            this.state.minusActive ? style.buttonActive : \"\"\n          )}\n          onClick={this.changeBy.bind(this, -1)}\n          onTouchStart={this.onTouchStart.bind(this, MINUS)}\n          onTouchEnd={this.onTouchEnd.bind(this, MINUS)}\n        >\n          <div className={style.icon}>\n            <AiFillMinusCircle />\n          </div>\n        </div>\n\n        {/* OPTIONS MODAL */}\n        {this.render_optionsModal()}\n      </div>\n    );\n  }\n}\n\nexport default magiCount;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport Magicount from './magiCount.js';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Magicount default={20} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}