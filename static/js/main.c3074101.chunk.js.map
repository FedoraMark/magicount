{"version":3,"sources":["magiCount.module.scss","magiCount.js","serviceWorker.js","index.js"],"names":["module","exports","defaultScores","vh","window","innerHeight","document","documentElement","style","setProperty","addEventListener","magiCount","state","default","props","score","atDefault","defaultIndex","indexOf","swipeDirection","isResetting","willTransition","orientation","plusActive","minusActive","maxTouches","handleOrientationChange","e","setState","currentTarget","changeBy","amt","scoreSwipe","dir","newIndex","length","setTimeout","DURATION","onTouchStart","btn","event","preventDefault","targetTouches","plusTouch","minusTouch","onTouchEnd","this","innerWidth","exitAnim","enterAnim","orientStyle","deg0","landscape","portrait","getElementById","className","dangerAt","warnAt","classnames","mc_wrapper","normal","warning","danger","button","buttonActive","onClick","bind","icon","area","scoreArea","onSwipedLeft","onSwipedRight","trackMouse","trackTouch","preventDefaultTouchmoveEvent","animationIn","animationOut","isVisible","duration","easing","digit","animateOnMount","Component","defaultProps","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c3074101.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mc_wrapper\":\"magiCount_mc_wrapper__3_Xdj\",\"portrait\":\"magiCount_portrait__2dwHL\",\"landscape\":\"magiCount_landscape__3G8M3\",\"button\":\"magiCount_button__44Hr4\",\"area\":\"magiCount_area__VZeCB\",\"icon\":\"magiCount_icon__qVCfU\",\"buttonActive\":\"magiCount_buttonActive__1IeeU\",\"scoreArea\":\"magiCount_scoreArea__20yf9\",\"score\":\"magiCount_score__t_Ww7\",\"digit\":\"magiCount_digit__2Cw7B\",\"default\":\"magiCount_default__1dXkB\",\"normal\":\"magiCount_normal__3qMrN\",\"warning\":\"magiCount_warning__26DgI\",\"danger\":\"magiCount_danger__2Jsk7\"};","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport Animated from \"react-css-animated\";\nimport { /* useSwipeable, */ Swipeable } from \"react-swipeable\";\n\nimport { AiFillPlusCircle, AiFillMinusCircle } from \"react-icons/ai\";\n\nimport \"animate.css\";\nimport style from \"./magiCount.module.scss\";\n\nconst defaultScores = [0, 10, 20, 30, 40, 50];\n\nconst LEFT = \"left\";\nconst RIGHT = \"right\";\n\nconst PLUS = \"plus\";\nconst MINUS = \"minus\";\n\nconst DURATION = 400;\n\n// WINDOW HEIGHT FIX\nlet vh = window.innerHeight * 0.01;\ndocument.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n\nwindow.addEventListener(\"resize\", () => {\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n});\n\nclass magiCount extends Component {\n  static propTypes = {\n    default: PropTypes.number.isRequired,\n    warnAt: PropTypes.number,\n    dangerAt: PropTypes.number,\n  };\n\n  static defaultProps = {\n    warnAt: 5,\n    dangerAt: 0,\n  };\n\n  state = {\n    default: this.props.default,\n    score: this.props.default,\n    atDefault: true,\n    defaultIndex: defaultScores.indexOf(this.props.default),\n    swipeDirection: \"\",\n    isResetting: true,\n    willTransition: false,\n    orientation: 0,\n\n    plusActive: false,\n    minusActive: false,\n    maxTouches: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isResetting: false,\n      orientation: window.innerHeight >= window.innerWidth ? 0 : 90,\n    });\n\n    this.handleOrientationChange();\n  }\n\n  // HANDLERS\n  handleOrientationChange = () => {\n    if (\"onorientationchange\" in window) {\n      window.addEventListener(\"orientationchange\", (e) => {\n        this.setState({ orientation: e.currentTarget.orientation });\n      });\n    }\n  };\n\n  // FUNCITONS\n  changeBy = (amt) => {\n    // use NEGATIVES to decrement\n    this.setState({\n      atDefault: false,\n      score: this.state.score + amt,\n    });\n  };\n\n  scoreSwipe = (dir) => {\n    if (this.state.isResetting || this.state.willTransition) {\n      return;\n    }\n\n    if (!this.state.atDefault) {\n      this.setState(\n        {\n          isResetting: true,\n          willTransition: true,\n          atDefault: true,\n        },\n        () => {\n          setTimeout(() => {\n            this.setState(\n              {\n                willTransition: false,\n                score: this.state.default,\n              },\n              () => {\n                setTimeout(() => {\n                  this.setState({ isResetting: false });\n                }, DURATION / 2);\n              }\n            );\n          }, DURATION / 2);\n        }\n      );\n    } else {\n      let newIndex = 0;\n      if (dir === LEFT) {\n        newIndex = this.state.defaultIndex + 1;\n      } else if (dir === RIGHT) {\n        newIndex = this.state.defaultIndex - 1;\n      }\n\n      if (newIndex < 0) {\n        newIndex = defaultScores.length - 1;\n      } else if (newIndex >= defaultScores.length) {\n        newIndex = 0;\n      }\n\n      this.setState(\n        {\n          swipeDirection: dir,\n          willTransition: true,\n        },\n        () => {\n          setTimeout(() => {\n            this.setState({\n              willTransition: false,\n              defaultIndex: newIndex,\n              score: defaultScores[newIndex],\n              default: defaultScores[newIndex],\n            });\n          }, DURATION / 2);\n        }\n      );\n    }\n  };\n\n  onTouchStart = (btn, event) => {\n    event.preventDefault();\n\n    if (event.targetTouches.length > this.state.maxTouches) {\n      this.setState({ maxTouches: event.targetTouches.length });\n    }\n\n    if (this.state.plusTouch || this.state.minusTouch) {\n      return;\n    }\n\n    if (btn === PLUS) {\n      this.setState({ plusTouch: true });\n    } else if (btn === MINUS) {\n      this.setState({ minusTouch: true });\n    }\n  };\n\n  onTouchEnd = (btn, event) => {\n    event.preventDefault();\n\n    if (event.targetTouches.length > 0) {\n      return;\n    }\n\n    if (btn === PLUS) {\n      this.changeBy(this.state.maxTouches);\n      this.setState({ plusTouch: false, maxTouches: 0 });\n    } else if (btn === MINUS) {\n      this.changeBy(-1 * this.state.maxTouches);\n      this.setState({ minusTouch: false, maxTouches: 0 });\n    }\n  };\n\n  // RENDERERS\n  render() {\n    let exitAnim =\n      this.state.swipeDirection === LEFT ? \"fadeOutLeftBig\" : \"fadeOutRightBig\";\n    let enterAnim =\n      this.state.swipeDirection === LEFT ? \"bounceInRight\" : \"bounceInLeft\";\n\n    if (this.state.isResetting) {\n      exitAnim = \"flipOutY\";\n      enterAnim = \"flipInY\";\n    }\n\n    var orientStyle = style.deg0;\n    switch (this.state.orientation) {\n      case 90:\n      case -90:\n        orientStyle = style.landscape;\n        break;\n      case 0:\n      default:\n        orientStyle = style.portrait;\n        break;\n    }\n\n    // set body background\n    if (this.state.atDefault) {\n      document.getElementById(\"body\").className = \"default\";\n    } else {\n      if (this.state.score <= this.props.dangerAt) {\n        document.getElementById(\"body\").className = \"danger\";\n      } else if (this.state.score <= this.props.warnAt) {\n        document.getElementById(\"body\").className = \"warning\";\n      } else {\n        document.getElementById(\"body\").className = \"normal\";\n      }\n    }\n\n    return (\n      <div\n        className={classnames(\n          style.mc_wrapper,\n          orientStyle,\n          this.state.atDefault ? style.default : style.normal,\n          this.state.score <= this.props.warnAt && this.state.default > 0\n            ? style.warning\n            : \"\",\n          this.state.score <= this.props.dangerAt && this.state.default > 0\n            ? style.danger\n            : \"\"\n        )}\n      >\n        {/* PLUS BUTTON */}\n        <div\n          className={classnames(\n            style.button,\n            this.state.plusActive ? style.buttonActive : \"\"\n          )}\n          onClick={this.changeBy.bind(this, 1)}\n          onTouchStart={this.onTouchStart.bind(this, PLUS)}\n          onTouchEnd={this.onTouchEnd.bind(this, PLUS)}\n        >\n          <div className={style.icon}>\n            <AiFillPlusCircle />\n          </div>\n        </div>\n\n        {/* SCORE AREA */}\n        <Swipeable\n          className={classnames(style.area, style.scoreArea)}\n          onSwipedLeft={this.scoreSwipe.bind(this, LEFT)}\n          onSwipedRight={this.scoreSwipe.bind(this, RIGHT)}\n          trackMouse\n          trackTouch\n          preventDefaultTouchmoveEvent\n        >\n          <Animated\n            className={classnames(style.score)}\n            animationIn={enterAnim}\n            animationOut={exitAnim}\n            isVisible={!this.state.willTransition}\n            duration={this.state.isResetting ? DURATION / 2 : DURATION}\n            easing={this.state.willTransition ? \"ease-in\" : \"ease\"}\n          >\n            <Animated\n              className={style.digit}\n              animateOnMount\n              animationIn=\"fadeIn\"\n            >\n              {this.state.score}\n            </Animated>\n          </Animated>\n        </Swipeable>\n\n        {/* MINUS BUTTON */}\n        <div\n          className={classnames(\n            style.button,\n            this.state.minusActive ? style.buttonActive : \"\"\n          )}\n          onClick={this.changeBy.bind(this, -1)}\n          onTouchStart={this.onTouchStart.bind(this, MINUS)}\n          onTouchEnd={this.onTouchEnd.bind(this, MINUS)}\n        >\n          <div className={style.icon}>\n            <AiFillMinusCircle />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default magiCount;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Magicount from './magiCount.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Magicount default={20} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}