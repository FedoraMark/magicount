// font
@font-face {
    font-family: Dense;

    src: url("./assets/Dense-Regular.otf") format("opentype");
}

// mixins
@mixin flex($align: center, $justify: center) {
    display: flex;

    align-items: $align;
    justify-content: $justify;
}

@mixin trans($prop: all) {
    -webkit-transition: $prop .25s ease;
       -moz-transition: $prop .25s ease;
        -ms-transition: $prop .25s ease;
         -o-transition: $prop .25s ease;
            transition: $prop .25s ease;
}

// vars
$color-text: #dff9fb;
$color-default: #34495e;
$color-default-darker: #2c3e50;
$color-normal: #6ab04c;
$color-normal-darker: #009432;
$color-warning: #f6b93b;
$color-warning-darker: #e58e26;
$color-danger: #e55039;
$color-danger-darker: #c0392b;
$color-black-bg: black;
$color-dark-bg: #1e272e;
$color-dark-text: #576574;
$namePadding: 2px;

// styles
.optModal {
    button,
    & > div > div {
        @include trans();
    }

    .optModalBody {
        @include flex();

        .modalList {
            padding: 0;
            margin: 0;

            list-style: none;

            * {
                cursor: pointer;
            }

            & > li {
                @include flex(center, space-between);

                &:not(:last-of-type) {
                    margin-bottom: .5rem;
                }

                span {
                    font-weight: bold;
                }
            }

            .label {
                margin: 0 0 0 1rem;

                flex-grow: 1;

                justify-self: flex-start;

                font-size: 1.35rem;
                font-weight: bold;
            }
        }
    }

    .optModalFooter {
        margin: 0;

        list-style: none;

        @include flex();

        & > li {
            @include flex();

            &:first-of-type,
            &:last-of-type {
                flex-grow: 1;
            }

            a {
                text-decoration: none;

                color: currentColor !important;
                border-bottom: 1px solid transparent;

                @include trans(border-bottom-color);

                &:hover,
                &:focus {
                    border-bottom-color: currentColor;
                }

                svg {
                    margin-top: -.1rem;
                }
            }

            &.fm {
                a {
                    display: inline-flex;
                    margin-left: .2rem;

                    & > div {
                        margin-right: .2rem;
                    }

                    .fedoram {
                        padding-top: $namePadding;
                    }

                    .fmark {
                        padding-bottom: $namePadding;
                    }
                }
            }

            .kofi {
                display: inline-flex;

                svg {
                    margin: .2rem .35rem 0 0;
                }

                &:hover,
                &:focus {
                    svg {
                        -webkit-transform-origin: top center;
                            -ms-transform-origin: top center;
                                transform-origin: top center;

                        -webkit-animation-name: swing;
                                animation-name: swing;
                        animation-duration: 1000ms;
                        animation-timing-function: ease;
                        animation-iteration-count: infinite;
                    }
                }
            }

            & > span > span {
                // githubbutton centering
                @include flex();
            }
        }
    }

    &.darkModal {
        color: $color-text;

        button {
            color: white;
        }

        & > div > div {
            background-color: $color-dark-bg;
        }

        .optModalHeader,
        .optModalFooter {
            border-color: lighten($color-dark-bg,10%);
        }
    }
}

.mc_wrapper {
    width: 100vw;
    height: calc(var(--vw, 1vw) * 100);
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
    padding: 0;
    margin: 0;
    overflow: hidden;

    @include flex(center,center);

    &.blurred {
        -webkit-filter: blur(5px);
           -moz-filter: blur(5px);
            -ms-filter: blur(5px);
             -o-filter: blur(5px);
                filter: blur(5px);
    }

    &.portrait {
        flex-direction: column;

        .score {
            font-size: 35vh;
        }

        .icon {
            font-size: 4vh;
        }
    }

    &.landscape {
        flex-direction: row-reverse;

        .score {
            font-size: 35vw;
        }

        .icon {
            font-size: 4vw;
        }
    }

    .button,
    .area {
        width: 100%;
        height: 100%;
        padding: 0;
        margin: 0;

        flex-grow: 1;

        @include flex();
    }

    .button {
        position: relative;
        z-index: 1;

        flex-basis: 100%;

        &:before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;

            width: 100%;
            height: 100%;

            background-color: transparent;

            @include trans();
        }

        &:active:before {
            background-color: rgba($color-text, .35);
        }

        .icon {
            padding: 0;
            margin: 0;

            opacity: .5;

            @include flex();
        }
    }

    .buttonActive:before {
        background-color: rgba($color-text, .35);
    }

    .area {
        flex-basis: 200%;
        box-sizing: border-box;
    }

    .scoreArea {
        font-family: Dense, Helvetica, Arial, sans-serif;
        font-weight: bold;

        .score {
            padding: 0;
            margin: 0;

            font-weight: bold;

            cursor: default;

            color: $color-text;

            @include flex();

            .digit {
                user-select: none;

                @include flex();
            }
        }
    }

    // *** ANIMS & TRANS
    .area,
    .button,
    .icon,
    .score {
        -webkit-transition: all .25s ease;
           -moz-transition: all .25s ease;
            -ms-transition: all .25s ease;
             -o-transition: all .25s ease;
                transition: all .25s ease;
    }

    // *** COLORS ***
    &.default {
        .area,
        .button {
            background-color: $color-default;
        }

        .icon {
            color: $color-default-darker;
        }
    }

    &.normal {
        .area,
        .button {
            background-color: $color-normal;
        }

        .icon {
            color: $color-normal-darker;
        }
    }

    &.warning {
        .area,
        .button {
            background-color: $color-warning;
        }

        .icon {
            color: $color-warning-darker;
        }
    }

    &.danger {
        .area,
        .button {
            background-color: $color-danger;
        }

        .icon {
            color: $color-danger-darker;
        }
    }

    // ** DARK MODE **
    &.dark {
        .area,
        .button {
            background-color: $color-black-bg;
        }

        .icon {
            opacity: 1;
        }

        &.default {
            .score,
            .icon {
                color: $color-dark-text;
            }
        }

        &.normal {
            // .score,
            .icon {
                color: $color-normal;
            }
        }

        &.warning {
            .score,
            .icon {
                color: $color-warning;
            }
        }

        &.danger {
            .score,
            .icon {
                color: $color-danger;
            }
        }
    }
}

// ANIMS
@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@-webkit-keyframes swing {
    20% {
        -webkit-transform: rotate(15deg);
                transform: rotate(15deg);
    }

    40% {
        -webkit-transform: rotate(-10deg);
                transform: rotate(-10deg);
    }

    60% {
        -webkit-transform: rotate(5deg);
                transform: rotate(5deg);
    }

    80% {
        -webkit-transform: rotate(-5deg);
                transform: rotate(-5deg);
    }

    100% {
        -webkit-transform: rotate(0deg);
                transform: rotate(0deg);
    }
}

@keyframes swing {
    20% {
        -webkit-transform: rotate(15deg);
            -ms-transform: rotate(15deg);
                transform: rotate(15deg);
    }

    40% {
        -webkit-transform: rotate(-10deg);
            -ms-transform: rotate(-10deg);
                transform: rotate(-10deg);
    }

    60% {
        -webkit-transform: rotate(5deg);
            -ms-transform: rotate(5deg);
                transform: rotate(5deg);
    }

    80% {
        -webkit-transform: rotate(-5deg);
            -ms-transform: rotate(-5deg);
                transform: rotate(-5deg);
    }

    100% {
        -webkit-transform: rotate(0deg);
            -ms-transform: rotate(0deg);
                transform: rotate(0deg);
    }
}
